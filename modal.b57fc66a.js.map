{"version":3,"sources":["js/modal.js"],"names":["headerHeight","document","getElementById","headerButton","headerAvatar","classList","remove","minY","window","onscroll","pageYOffset","scrollY","add","addEventListener","scrollbar","Math","abs","body","clientWidth","innerWidth","console","log","pageOffset","prevBodyOverflow","style","overflow","modalTrigger","Array","from","querySelectorAll","forEach","element","event","targetModalId","selector","target","attributes","value","marginRight","btnOpenElem","modalCloseTrigger","openText","textSelector","buttonSelector","moreText","btnText","setTimeout"],"mappings":";AAIA,IAAMA,EAAeC,SAASC,eAAe,YACvCC,EAAeF,SAASC,eAAe,YACvCE,EAAeH,SAASC,eAAe,YAC7CF,EAAaK,UAAUC,OAAO,eAC9BH,EAAaE,UAAUC,OAAO,eAC9BF,EAAaC,UAAUC,OAAO,eAC9B,IAAMC,EAAO,IACbC,OAAOC,SAAW,YAEKD,OAAOE,aAAeF,OAAOG,UAK9BJ,GAChBP,EAAaK,UAAUO,IAAI,eAC3BT,EAAaE,UAAUO,IAAI,eAC3BR,EAAaC,UAAUO,IAAI,iBAE3BZ,EAAaK,UAAUC,OAAO,eAC9BH,EAAaE,UAAUC,OAAO,eAC9BF,EAAaC,UAAUC,OAAO,iBAMpCL,SAASY,iBAAiB,mBAAoB,WAEtCC,IAAAA,EAAYC,KAAKC,IAAIf,SAASgB,KAAKC,YAAcV,OAAOW,YAAc,KAC5EC,QAAQC,IAAIP,GAENQ,IAAAA,EAAa,WAAOd,OAAAA,OAAOE,aAAeF,OAAOG,SACnDY,EAAmBtB,SAASgB,KAAKO,MAAMC,UAAY,UA2BjDC,IAAAA,EAAeC,MAAMC,KAAK3B,SAAS4B,iBAAiB,kBAC1DT,QAAQC,IAAI,kBAAoBK,GAEhCA,EAAaI,QAAQ,SAAAC,GACnBA,EAAQlB,iBAAiB,QAAS,SAAAmB,GAC1BC,IA5BSC,EA4BTD,EAAgBD,EAAMG,OAAOC,WAAW,eAAeC,MAC7DjB,QAAQC,IAAI,mBAAqBY,GA7BlBC,EA8BLD,EA7BUX,IACtBC,EAAmBtB,SAASgB,KAAKO,MAAMC,SAC5BxB,SAASC,eAAegC,GAChC7B,UAAUO,IAAI,WACjBX,SAASgB,KAAKO,MAAMC,SAAW,SAC/BxB,SAASgB,KAAKO,MAAMc,YAAcxB,EAClCyB,YAAYlC,UAAUC,OAAO,gBA6BzBkC,IAAAA,EAAoBb,MAAMC,KAAK3B,SAAS4B,iBAAiB,wBActDY,SAAAA,EAASC,EAAcC,GAExBC,IAAAA,EAAW3C,SAASC,eAAewC,GACnCG,EAAU5C,SAASC,eAAeyC,GAExCvB,QAAQC,IAAI,iCAEZwB,EAAQxC,UAAUO,IAAI,gBACtBgC,EAASvC,UAAUC,OAAO,cAC1BsC,EAASvC,UAAUO,IAAI,iBAtBzBQ,QAAQC,IAAImB,GACZA,EAAkBV,QAAQ,SAAAC,GACxBA,EAAQlB,iBAAiB,QAAS,SAAAmB,GAC1BC,IA9BUC,EA8BVD,EAAgBD,EAAMG,OAAOC,WAAW,qBAAqBC,MACnEjB,QAAQC,IAAI,mBAAqBY,GA/BjBC,EAgCLD,EA/BFhC,SAASC,eAAegC,GAChC7B,UAAUC,OAAO,WAEpBwC,WAAW,WACT7C,SAASgB,KAAKO,MAAMC,SAAWF,EAC/BtB,SAASgB,KAAKO,MAAMc,YAAc,EAClCC,YAAYlC,UAAUO,IAAI,aACzB,SA4CLX,SAASC,eAAe,SAASW,iBAAiB,QAAS,SAAAmB,GACzDS,EAAS,SAAU,WAGrBxC,SAASC,eAAe,SAASW,iBAAiB,QAAS,SAAAmB,GACzDS,EAAS,SAAU,WAGrBxC,SAASC,eAAe,SAASW,iBAAiB,QAAS,SAAAmB,GACzDS,EAAS,SAAU","file":"modal.b57fc66a.js","sourceRoot":"..\\src","sourcesContent":["// ------------------ скрипты модального меню -------------------\r\n\r\n\r\n// изменение высоты у header в процессе прокрутки окна\r\nconst headerHeight = document.getElementById('headerId');\r\nconst headerButton = document.getElementById('buttonId');\r\nconst headerAvatar = document.getElementById('avatarId');\r\nheaderHeight.classList.remove('_header-min');\r\nheaderButton.classList.remove('_button-min');\r\nheaderAvatar.classList.remove('_avatar-min');\r\nconst minY = 200;\r\nwindow.onscroll = function () {\r\n  // отслеживаем координаты по оси Y\r\n  const pageY = () => (window.pageYOffset || window.scrollY);\r\n  let scrollYPos = pageY();\r\n  // setTimeout(() => {\r\n\r\n    // if координаты больше minY, то уменьшаем высоту header, else оставляем прежней\r\n    if (scrollYPos >= minY) {\r\n      headerHeight.classList.add('_header-min');\r\n      headerButton.classList.add('_button-min');\r\n      headerAvatar.classList.add('_avatar-min');\r\n    } else {\r\n      headerHeight.classList.remove('_header-min');\r\n      headerButton.classList.remove('_button-min');\r\n      headerAvatar.classList.remove('_avatar-min');\r\n    };\r\n  // }, 200); // время transition в CSS\r\n};\r\n\r\n// убрать скролл страницы после отображения модального окна\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  // вычисляем ширину полосы прокрутки и берем ее модуль\r\n  const scrollbar = Math.abs(document.body.clientWidth - window.innerWidth) + 'px';\r\n  console.log(scrollbar);\r\n\r\n  const pageOffset = () => (window.pageYOffset || window.scrollY);\r\n  let prevBodyOverflow = document.body.style.overflow || 'initial'; // сохраняем значение overflow на старте страницы\r\n  let prevScrollYPosition = 0; // вводим переменную для сохранения параметра scrollY\r\n\r\n  // функция отрабатывающая открытие модального окна\r\n  function openModal(selector) {\r\n    prevScrollYPosition = pageOffset(); // сохраняем значение параметра scrollY\r\n    prevBodyOverflow = document.body.style.overflow; // сохраняем значение overflow до открытия модалки\r\n    const el = document.getElementById(selector);\r\n    el.classList.add('_opened'); // добавляем модификатор _opened\r\n    document.body.style.overflow = 'hidden'; // скрываем полосу прокрутки\r\n    document.body.style.marginRight = scrollbar; // компенсируем отсутсвие полосы прокрутки (иначе будет скачкообразнное смещение страницы)\r\n    btnOpenElem.classList.remove('_visible');\r\n  }\r\n  // функция отрабатывающая закрытие модального окна\r\n  function closeModal(selector) {\r\n    const el = document.getElementById(selector);\r\n    el.classList.remove('_opened'); // удаляем модификатор _opened\r\n    // ждем пока отработает transition в CSS, чтобы вернуть полосу прокрутки\r\n    setTimeout(() => {\r\n      document.body.style.overflow = prevBodyOverflow;\r\n      document.body.style.marginRight = 0;\r\n      btnOpenElem.classList.add('_visible');\r\n    }, 200); // время transition в CSS\r\n  }\r\n\r\n  // смотрим на какую кнопку нажали\r\n  // это кнопки вызывающие открытие модалки\r\n  const modalTrigger = Array.from(document.querySelectorAll('[mobile-menu]')); // формируем массив из всех элементов содержащих mobile-menu\r\n  console.log('modalTrigger = ' + modalTrigger); // проверяем, что он сформировался\r\n  // перебираем массив и выделяем элемент по которому кликнули\r\n  modalTrigger.forEach(element => {\r\n    element.addEventListener('click', event => {\r\n      const targetModalId = event.target.attributes['mobile-menu'].value;\r\n      console.log('targetModalId = ' + targetModalId); // проверяем тот ли это элемент\r\n      openModal(targetModalId); // обращаемся к функции, которая откроет модалку\r\n    });\r\n  });\r\n\r\n  // смотрим на какую кнопку нажали\r\n  // это кнопки вызывающие закрытие модалки\r\n  const modalCloseTrigger = Array.from(document.querySelectorAll('[mobile-menu-close]'));\r\n  console.log(modalCloseTrigger);\r\n  modalCloseTrigger.forEach(element => {\r\n    element.addEventListener('click', event => {\r\n      const targetModalId = event.target.attributes['mobile-menu-close'].value;\r\n      console.log('targetModalId = ' + targetModalId);\r\n      closeModal(targetModalId);\r\n    });\r\n  });\r\n\r\n\r\n  // ------------- Отображать скрытый текст в секции about  -----------------\r\n\r\n  // функция отрабатывающая открытие текста и сокрытие кнопки\r\n  function openText(textSelector, buttonSelector) {\r\n\r\n    const moreText = document.getElementById(textSelector);\r\n    const btnText = document.getElementById(buttonSelector);\r\n\r\n    console.log('btn \"See more...\" was pressed');\r\n\r\n    btnText.classList.add('_hide-button');\r\n    moreText.classList.remove('_hide-text');\r\n    moreText.classList.add('_visible-text');\r\n  }\r\n  // нажали на 1-ю кнопку\r\n  document.getElementById(\"btn-1\").addEventListener('click', event => {\r\n    openText('more-1', 'btn-1');\r\n  });\r\n  // нажали на 2-ю кнопку\r\n  document.getElementById(\"btn-2\").addEventListener('click', event => {\r\n    openText('more-2', 'btn-2');\r\n  });\r\n  // нажали на 2-ю кнопку\r\n  document.getElementById(\"btn-3\").addEventListener('click', event => {\r\n    openText('more-3', 'btn-3');\r\n  });\r\n});"]}