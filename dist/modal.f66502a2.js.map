{"version":3,"sources":["js/modal.js"],"names":["btnOpenElem","document","getElementById","minY","window","onscroll","pageY","scrollYPos","pageYOffset","scrollY","widthWin","body","clientWidth","classList","add","remove","addEventListener","scrollbar","Math","abs","innerWidth","console","log","pageOffset","prevBodyOverflow","style","overflow","modalTrigger","Array","from","querySelectorAll","forEach","element","event","targetModalId","selector","target","attributes","value","marginRight","modalCloseTrigger","setTimeout"],"mappings":";AAGA,IAAMA,EAAcC,SAASC,eAAe,YACxCC,EAAO,IACXC,OAAOC,SAAW,WAEVC,IACFC,EADiBH,OAAOI,aAAeJ,OAAOK,QAG5CC,EAAWT,SAASU,KAAKC,YAO3BL,IALFJ,EADEO,EAAW,IACN,IAEA,KAIPV,EAAYa,UAAUC,IAAI,YAE1Bd,EAAYa,UAAUE,OAAO,aAKjCd,SAASe,iBAAiB,mBAAoB,WAEtCC,IAAAA,EAAYC,KAAKC,IAAIlB,SAASU,KAAKC,YAAcR,OAAOgB,YAAc,KAC5EC,QAAQC,IAAIL,GAENM,IAAAA,EAAa,WAAOnB,OAAAA,OAAOI,aAAeJ,OAAOK,SACnDe,EAAmBvB,SAASU,KAAKc,MAAMC,UAAY,UA2BjDC,IAAAA,EAAeC,MAAMC,KAAK5B,SAAS6B,iBAAiB,iBAC1DT,QAAQC,IAAI,kBAAoBK,GAEhCA,EAAaI,QAAQ,SAAAC,GACnBA,EAAQhB,iBAAiB,QAAS,SAAAiB,GAC1BC,IA5BSC,EA4BTD,EAAgBD,EAAMG,OAAOC,WAAW,cAAcC,MAC5DjB,QAAQC,IAAI,mBAAqBY,GA7BlBC,EA8BLD,EA7BUX,IACtBC,EAAmBvB,SAASU,KAAKc,MAAMC,SAC5BzB,SAASC,eAAeiC,GAChCtB,UAAUC,IAAI,WACjBb,SAASU,KAAKc,MAAMC,SAAW,SAC/BzB,SAASU,KAAKc,MAAMc,YAActB,EAClCjB,EAAYa,UAAUE,OAAO,gBA6BzByB,IAAAA,EAAoBZ,MAAMC,KAAK5B,SAAS6B,iBAAiB,uBAC/DT,QAAQC,IAAIkB,GACZA,EAAkBT,QAAQ,SAAAC,GACxBA,EAAQhB,iBAAiB,QAAS,SAAAiB,GAC1BC,IA9BUC,EA8BVD,EAAgBD,EAAMG,OAAOC,WAAW,oBAAoBC,MAClEjB,QAAQC,IAAI,mBAAqBY,GA/BjBC,EAgCLD,EA/BFjC,SAASC,eAAeiC,GAChCtB,UAAUE,OAAO,WAEpB0B,WAAW,WACTxC,SAASU,KAAKc,MAAMC,SAAWF,EAC/BvB,SAASU,KAAKc,MAAMc,YAAc,EAClCvC,EAAYa,UAAUC,IAAI,aACzB","file":"modal.f66502a2.js","sourceRoot":"..\\src","sourcesContent":["// ------------------ скрипты модального меню -------------------\r\n\r\n// появление/исчезновение кнопки вызова модалки в процессе прокрутки окна\r\nconst btnOpenElem = document.getElementById('modalBtn');\r\nlet minY = 500;\r\nwindow.onscroll = function () {\r\n  // отслеживаем координаты по оси Y\r\n  const pageY = () => (window.pageYOffset || window.scrollY);\r\n  let scrollYPos = pageY();\r\n  // смотрим на разрешение окна браузера\r\n  const widthWin = document.body.clientWidth;\r\n  if (widthWin < 480) {\r\n    minY = 200\r\n  } else {\r\n    minY = 100\r\n  };\r\n  // if координаты больше minY, то показываем кнопку, else убираем\r\n  if (scrollYPos >= minY) {\r\n    btnOpenElem.classList.add('_visible');\r\n  } else {\r\n    btnOpenElem.classList.remove('_visible');\r\n  };\r\n};\r\n\r\n// убрать скролл страницы после отображения модального окна\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  // вычисляем ширину полосы прокрутки и берем ее модуль\r\n  const scrollbar = Math.abs(document.body.clientWidth - window.innerWidth) + 'px';\r\n  console.log(scrollbar);\r\n\r\n  const pageOffset = () => (window.pageYOffset || window.scrollY);\r\n  let prevBodyOverflow = document.body.style.overflow || 'initial'; // сохраняем значение overflow на старте страницы\r\n  let prevScrollYPosition = 0; // вводим переменную для сохранения параметра scrollY\r\n\r\n  // функция отрабатывающая открытие модального окна\r\n  function openModal(selector) {\r\n    prevScrollYPosition = pageOffset(); // сохраняем значение параметра scrollY\r\n    prevBodyOverflow = document.body.style.overflow; // сохраняем значение overflow до открытия модалки\r\n    const el = document.getElementById(selector);\r\n    el.classList.add('_opened'); // добавляем модификатор _opened\r\n    document.body.style.overflow = 'hidden'; // скрываем полосу прокрутки\r\n    document.body.style.marginRight = scrollbar; // компенсируем отсутсвие полосы прокрутки (иначе будет скачкообразнное смещение страницы)\r\n    btnOpenElem.classList.remove('_visible');\r\n  }\r\n  // функция отрабатывающая закрытие модального окна\r\n  function closeModal(selector) {\r\n    const el = document.getElementById(selector);\r\n    el.classList.remove('_opened'); // удаляем модификатор _opened\r\n    // ждем пока отработает transition в CSS, чтобы вернуть полосу прокрутки\r\n    setTimeout(() => {\r\n      document.body.style.overflow = prevBodyOverflow;\r\n      document.body.style.marginRight = 0;\r\n      btnOpenElem.classList.add('_visible');\r\n    }, 200); // время transition в CSS        \r\n  }\r\n\r\n  // смотрим на какую кнопку нажали\r\n  // это кнопки вызывающие открытие модалки\r\n  const modalTrigger = Array.from(document.querySelectorAll('[data-modal]')); // формируем массив из всех элементов содержащих data-modal\r\n  console.log('modalTrigger = ' + modalTrigger); // проверяем, что он сформировался\r\n  // перебираем массив и выделяем элемент по которому кликнули\r\n  modalTrigger.forEach(element => {\r\n    element.addEventListener('click', event => {\r\n      const targetModalId = event.target.attributes['data-modal'].value;\r\n      console.log('targetModalId = ' + targetModalId); // проверяем тот ли это элемент\r\n      openModal(targetModalId); // обращаемся к функции, которая откроет модалку\r\n    });\r\n  });\r\n\r\n  // смотрим на какую кнопку нажали\r\n  // это кнопки вызывающие закрытие модалки\r\n  const modalCloseTrigger = Array.from(document.querySelectorAll('[data-modal-close]'));\r\n  console.log(modalCloseTrigger);\r\n  modalCloseTrigger.forEach(element => {\r\n    element.addEventListener('click', event => {\r\n      const targetModalId = event.target.attributes['data-modal-close'].value;\r\n      console.log('targetModalId = ' + targetModalId);\r\n      closeModal(targetModalId);\r\n    });\r\n  });\r\n\r\n});"]}