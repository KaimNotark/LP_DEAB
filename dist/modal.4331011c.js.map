{"version":3,"sources":["js/modal.js"],"names":["btnOpenElem","document","getElementById","minY","window","onscroll","pageY","pageYOffset","scrollY","scrollYPos","widthWin","body","clientWidth","classList","add","remove","addEventListener","scrollbar","Math","abs","innerWidth","console","log","pageOffset","prevBodyOverflow","style","overflow","prevScrollYPosition","openModal","selector","el","marginRight","closeModal","setTimeout","modalTrigger","Array","from","querySelectorAll","forEach","element","event","targetModalId","target","attributes","value","modalCloseTrigger"],"mappings":"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","file":"modal.4331011c.js","sourceRoot":"..\\src","sourcesContent":["// ------------------ скрипты модального меню -------------------\r\n\r\n// появление/исчезновение кнопки вызова модалки в процессе прокрутки окна\r\nconst btnOpenElem = document.getElementById('modalBtn');\r\nlet minY = 500;\r\nwindow.onscroll = function () {\r\n  // отслеживаем координаты по оси Y\r\n  const pageY = () => (window.pageYOffset || window.scrollY);\r\n  let scrollYPos = pageY();\r\n  // смотрим на разрешение окна браузера\r\n  const widthWin = document.body.clientWidth;\r\n  if (widthWin < 480) {\r\n    minY = 200\r\n  } else {\r\n    minY = 100\r\n  };\r\n  // if координаты больше minY, то показываем кнопку, else убираем\r\n  if (scrollYPos >= minY) {\r\n    btnOpenElem.classList.add('_visible');\r\n  } else {\r\n    btnOpenElem.classList.remove('_visible');\r\n  };\r\n};\r\n\r\n// убрать скролл страницы после отображения модального окна\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  // вычисляем ширину полосы прокрутки и берем ее модуль\r\n  const scrollbar = Math.abs(document.body.clientWidth - window.innerWidth) + 'px';\r\n  console.log(scrollbar);\r\n\r\n  const pageOffset = () => (window.pageYOffset || window.scrollY);\r\n  let prevBodyOverflow = document.body.style.overflow || 'initial'; // сохраняем значение overflow на старте страницы\r\n  let prevScrollYPosition = 0; // вводим переменную для сохранения параметра scrollY\r\n\r\n  // функция отрабатывающая открытие модального окна\r\n  function openModal(selector) {\r\n    prevScrollYPosition = pageOffset(); // сохраняем значение параметра scrollY\r\n    prevBodyOverflow = document.body.style.overflow; // сохраняем значение overflow до открытия модалки\r\n    const el = document.getElementById(selector);\r\n    el.classList.add('_opened'); // добавляем модификатор _opened\r\n    document.body.style.overflow = 'hidden'; // скрываем полосу прокрутки\r\n    document.body.style.marginRight = scrollbar; // компенсируем отсутсвие полосы прокрутки (иначе будет скачкообразнное смещение страницы)\r\n    btnOpenElem.classList.remove('_visible');\r\n  }\r\n  // функция отрабатывающая закрытие модального окна\r\n  function closeModal(selector) {\r\n    const el = document.getElementById(selector);\r\n    el.classList.remove('_opened'); // удаляем модификатор _opened\r\n    // ждем пока отработает transition в CSS, чтобы вернуть полосу прокрутки\r\n    setTimeout(() => {\r\n      document.body.style.overflow = prevBodyOverflow;\r\n      document.body.style.marginRight = 0;\r\n      btnOpenElem.classList.add('_visible');\r\n    }, 200); // время transition в CSS        \r\n  }\r\n\r\n  // смотрим на какую кнопку нажали\r\n  // это кнопки вызывающие открытие модалки\r\n  const modalTrigger = Array.from(document.querySelectorAll('[data-modal]')); // формируем массив из всех элементов содержащих data-modal\r\n  console.log('modalTrigger = ' + modalTrigger); // проверяем, что он сформировался\r\n  // перебираем массив и выделяем элемент по которому кликнули\r\n  modalTrigger.forEach(element => {\r\n    element.addEventListener('click', event => {\r\n      const targetModalId = event.target.attributes['data-modal'].value;\r\n      console.log('targetModalId = ' + targetModalId); // проверяем тот ли это элемент\r\n      openModal(targetModalId); // обращаемся к функции, которая откроет модалку\r\n    });\r\n  });\r\n\r\n  // смотрим на какую кнопку нажали\r\n  // это кнопки вызывающие закрытие модалки\r\n  const modalCloseTrigger = Array.from(document.querySelectorAll('[data-modal-close]'));\r\n  console.log(modalCloseTrigger);\r\n  modalCloseTrigger.forEach(element => {\r\n    element.addEventListener('click', event => {\r\n      const targetModalId = event.target.attributes['data-modal-close'].value;\r\n      console.log('targetModalId = ' + targetModalId);\r\n      closeModal(targetModalId);\r\n    });\r\n  });\r\n\r\n});"]}